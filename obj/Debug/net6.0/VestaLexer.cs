//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\fredm\RiderProjects\P4Project\Antlr language\Content\Vesta.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Antlr_language.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class VestaLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, BOOL_OPERATOR=31, 
		INTEGER=32, BOOL=33, TYPE=34, IDENTIFIER=35, WS=36;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "BOOL_OPERATOR", "INTEGER", 
		"BOOL", "TYPE", "IDENTIFIER", "WS"
	};


	public VestaLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'if'", "'('", "')'", "'else'", "'while'", "'chance'", "'{'", 
		"':'", "'}'", "'='", "'var'", "','", "'['", "']'", "'rand('", "'.'", "'!'", 
		"'remove'", "'add'", "'*'", "'/'", "'+'", "'-'", "'=='", "'!='", "'>'", 
		"'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "BOOL_OPERATOR", "INTEGER", 
		"BOOL", "TYPE", "IDENTIFIER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Vesta.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xD5\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3"+
		"\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x5 \xAA\n \x3!\x6"+
		"!\xAD\n!\r!\xE!\xAE\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\""+
		"\xBA\n\"\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x5#\xC6\n#\x3$\x3$\a"+
		"$\xCA\n$\f$\xE$\xCD\v$\x3%\x6%\xD0\n%\r%\xE%\xD1\x3%\x3%\x2\x2\x2&\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43"+
		"\x2#\x45\x2$G\x2%I\x2&\x3\x2\x6\x3\x2\x32;\x5\x2\x43\\\x61\x61\x63|\x6"+
		"\x2\x32;\x43\\\x61\x61\x63|\x4\x2\v\f\xF\xF\xDB\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3K\x3\x2\x2\x2\x5"+
		"M\x3\x2\x2\x2\aP\x3\x2\x2\x2\tR\x3\x2\x2\x2\vT\x3\x2\x2\x2\rY\x3\x2\x2"+
		"\x2\xF_\x3\x2\x2\x2\x11\x66\x3\x2\x2\x2\x13h\x3\x2\x2\x2\x15j\x3\x2\x2"+
		"\x2\x17l\x3\x2\x2\x2\x19n\x3\x2\x2\x2\x1Br\x3\x2\x2\x2\x1Dt\x3\x2\x2\x2"+
		"\x1Fv\x3\x2\x2\x2!x\x3\x2\x2\x2#~\x3\x2\x2\x2%\x80\x3\x2\x2\x2\'\x82\x3"+
		"\x2\x2\x2)\x89\x3\x2\x2\x2+\x8D\x3\x2\x2\x2-\x8F\x3\x2\x2\x2/\x91\x3\x2"+
		"\x2\x2\x31\x93\x3\x2\x2\x2\x33\x95\x3\x2\x2\x2\x35\x98\x3\x2\x2\x2\x37"+
		"\x9B\x3\x2\x2\x2\x39\x9D\x3\x2\x2\x2;\x9F\x3\x2\x2\x2=\xA2\x3\x2\x2\x2"+
		"?\xA9\x3\x2\x2\x2\x41\xAC\x3\x2\x2\x2\x43\xB9\x3\x2\x2\x2\x45\xC5\x3\x2"+
		"\x2\x2G\xC7\x3\x2\x2\x2I\xCF\x3\x2\x2\x2KL\a=\x2\x2L\x4\x3\x2\x2\x2MN"+
		"\ak\x2\x2NO\ah\x2\x2O\x6\x3\x2\x2\x2PQ\a*\x2\x2Q\b\x3\x2\x2\x2RS\a+\x2"+
		"\x2S\n\x3\x2\x2\x2TU\ag\x2\x2UV\an\x2\x2VW\au\x2\x2WX\ag\x2\x2X\f\x3\x2"+
		"\x2\x2YZ\ay\x2\x2Z[\aj\x2\x2[\\\ak\x2\x2\\]\an\x2\x2]^\ag\x2\x2^\xE\x3"+
		"\x2\x2\x2_`\a\x65\x2\x2`\x61\aj\x2\x2\x61\x62\a\x63\x2\x2\x62\x63\ap\x2"+
		"\x2\x63\x64\a\x65\x2\x2\x64\x65\ag\x2\x2\x65\x10\x3\x2\x2\x2\x66g\a}\x2"+
		"\x2g\x12\x3\x2\x2\x2hi\a<\x2\x2i\x14\x3\x2\x2\x2jk\a\x7F\x2\x2k\x16\x3"+
		"\x2\x2\x2lm\a?\x2\x2m\x18\x3\x2\x2\x2no\ax\x2\x2op\a\x63\x2\x2pq\at\x2"+
		"\x2q\x1A\x3\x2\x2\x2rs\a.\x2\x2s\x1C\x3\x2\x2\x2tu\a]\x2\x2u\x1E\x3\x2"+
		"\x2\x2vw\a_\x2\x2w \x3\x2\x2\x2xy\at\x2\x2yz\a\x63\x2\x2z{\ap\x2\x2{|"+
		"\a\x66\x2\x2|}\a*\x2\x2}\"\x3\x2\x2\x2~\x7F\a\x30\x2\x2\x7F$\x3\x2\x2"+
		"\x2\x80\x81\a#\x2\x2\x81&\x3\x2\x2\x2\x82\x83\at\x2\x2\x83\x84\ag\x2\x2"+
		"\x84\x85\ao\x2\x2\x85\x86\aq\x2\x2\x86\x87\ax\x2\x2\x87\x88\ag\x2\x2\x88"+
		"(\x3\x2\x2\x2\x89\x8A\a\x63\x2\x2\x8A\x8B\a\x66\x2\x2\x8B\x8C\a\x66\x2"+
		"\x2\x8C*\x3\x2\x2\x2\x8D\x8E\a,\x2\x2\x8E,\x3\x2\x2\x2\x8F\x90\a\x31\x2"+
		"\x2\x90.\x3\x2\x2\x2\x91\x92\a-\x2\x2\x92\x30\x3\x2\x2\x2\x93\x94\a/\x2"+
		"\x2\x94\x32\x3\x2\x2\x2\x95\x96\a?\x2\x2\x96\x97\a?\x2\x2\x97\x34\x3\x2"+
		"\x2\x2\x98\x99\a#\x2\x2\x99\x9A\a?\x2\x2\x9A\x36\x3\x2\x2\x2\x9B\x9C\a"+
		"@\x2\x2\x9C\x38\x3\x2\x2\x2\x9D\x9E\a>\x2\x2\x9E:\x3\x2\x2\x2\x9F\xA0"+
		"\a@\x2\x2\xA0\xA1\a?\x2\x2\xA1<\x3\x2\x2\x2\xA2\xA3\a>\x2\x2\xA3\xA4\a"+
		"?\x2\x2\xA4>\x3\x2\x2\x2\xA5\xA6\a(\x2\x2\xA6\xAA\a(\x2\x2\xA7\xA8\a~"+
		"\x2\x2\xA8\xAA\a~\x2\x2\xA9\xA5\x3\x2\x2\x2\xA9\xA7\x3\x2\x2\x2\xAA@\x3"+
		"\x2\x2\x2\xAB\xAD\t\x2\x2\x2\xAC\xAB\x3\x2\x2\x2\xAD\xAE\x3\x2\x2\x2\xAE"+
		"\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\x42\x3\x2\x2\x2\xB0\xB1\av\x2"+
		"\x2\xB1\xB2\at\x2\x2\xB2\xB3\aw\x2\x2\xB3\xBA\ag\x2\x2\xB4\xB5\ah\x2\x2"+
		"\xB5\xB6\a\x63\x2\x2\xB6\xB7\an\x2\x2\xB7\xB8\au\x2\x2\xB8\xBA\ag\x2\x2"+
		"\xB9\xB0\x3\x2\x2\x2\xB9\xB4\x3\x2\x2\x2\xBA\x44\x3\x2\x2\x2\xBB\xBC\a"+
		"k\x2\x2\xBC\xBD\ap\x2\x2\xBD\xC6\av\x2\x2\xBE\xBF\a\x64\x2\x2\xBF\xC0"+
		"\aq\x2\x2\xC0\xC1\aq\x2\x2\xC1\xC6\an\x2\x2\xC2\xC3\ao\x2\x2\xC3\xC4\a"+
		"\x63\x2\x2\xC4\xC6\ar\x2\x2\xC5\xBB\x3\x2\x2\x2\xC5\xBE\x3\x2\x2\x2\xC5"+
		"\xC2\x3\x2\x2\x2\xC6\x46\x3\x2\x2\x2\xC7\xCB\t\x3\x2\x2\xC8\xCA\t\x4\x2"+
		"\x2\xC9\xC8\x3\x2\x2\x2\xCA\xCD\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2\xCB\xCC"+
		"\x3\x2\x2\x2\xCCH\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCE\xD0\t\x5\x2\x2\xCF"+
		"\xCE\x3\x2\x2\x2\xD0\xD1\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2"+
		"\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD4\b%\x2\x2\xD4J\x3\x2\x2\x2\t\x2\xA9"+
		"\xAE\xB9\xC5\xCB\xD1\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Antlr_language.Content
